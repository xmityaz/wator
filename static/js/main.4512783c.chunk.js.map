{"version":3,"sources":["Ocean/logic.ts","Ocean/playground.ts","EvolutionControls/EvolutionControls.tsx","StartControls/StartControls.tsx","Ocean/Ocean.tsx","App/App.tsx","App/serviceWorker.ts","index.tsx","Ocean/Ocean.module.scss","App/App.module.scss"],"names":["isFish","pet","energy","getRandomEl","arr","Math","floor","random","length","processFishMove","petMap","position","boardSize","zptI","indexOf","x","Number","slice","y","west","width","east","south","height","north","positions","push","newPosition","processPetReproduce","positionToThrowCaviarIn","reproduce","evolutionParams","reproducingRate","fishReproducingRate","sharkReproducingRate","cyclesSinceReproduce","processSharkMove","config","shark","neighbourFishPositions","currentPosition","moveToRandomPosition","sharkMaxEnergy","initializePetMap","startParams","a","counter","startSharkNumber","startFishNumber","BRICK_SIZE","Playground","canvas","ctx","drawRect","color","fillStyle","fillRect","clear","clearRect","drawPetMap","activeShape","type","undefined","this","getContext","EvolutionControls","onInputChange","event","value","currentTarget","name","props","onChange","values","className","min","max","gameSpeed","React","Component","StartControls","disabled","id","data-toggle","data-placement","title","Ocean","playground","gameLoop","initCanvas","el","step","Object","keys","fishPositions","filter","sharkPositions","forEach","processDay","onStart","play","pause","setState","isRunning","clearInterval","setInterval","requestAnimationFrame","reset","state","setEvolutionParams","setStartParams","initialConfig","withControls","s","root","oceanWrapper","ref","overlay","onClick","pauseOverlay","controls","testConfig","App","header","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4512783c.chunk.js","sourcesContent":["import {Config} from './Ocean.types';\n\ntype Fish = {\n  cyclesSinceReproduce: number;\n};\n\ntype Shark = {\n  cyclesSinceReproduce: number;\n  energy: number;\n};\n\nexport type Pet = Fish | Shark;\n\nexport type PetMap = {[position: string]: Pet}; // {['0,1': {cyclesSinceReproduce: 2}]}\n\nexport function isFish(pet: Pet) {\n  return typeof (pet as Shark).energy === 'undefined';\n}\n\nfunction getRandomEl(arr: any[]) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nfunction moveToRandomPosition(positions: string[], petMap: PetMap, currentPosition: string): string {\n  if (positions.length > 0) {\n    const newPosition = getRandomEl(positions);\n    petMap[newPosition] = petMap[currentPosition];\n    delete petMap[currentPosition];\n\n    return newPosition;\n  }\n\n  return currentPosition;\n}\n\nfunction processFishMove(petMap: PetMap, position: string, {boardSize}: Config): string {\n  const zptI = position.indexOf(',');\n  const x = Number(position.slice(0, zptI));\n  const y = Number(position.slice(zptI + 1, position.length));\n\n  const west = x <= 0 ? `${boardSize.width - 1},${y}` : `${x - 1},${y}`;\n  const east = x >= boardSize.width ? `0,${y}` : `${x + 1},${y}`;\n  const south = y <= 0 ? `${x},${boardSize.height - 1}` : `${x},${y - 1}`;\n  const north = y >= boardSize.height ? `${x},0` : `${x},${y + 1}`;\n  const positions = [];\n\n  if (!petMap[west]) {\n    positions.push(west);\n  }\n  if (!petMap[east]) {\n    positions.push(east);\n  }\n  if (!petMap[south]) {\n    positions.push(south);\n  }\n  if (!petMap[north]) {\n    positions.push(north);\n  }\n\n  if (positions.length > 0) {\n    const newPosition = getRandomEl(positions);\n    petMap[newPosition] = petMap[position];\n    delete petMap[position];\n\n    return newPosition;\n  }\n\n  return position;\n}\n\nfunction processPetReproduce(\n  petMap: PetMap,\n  positionToThrowCaviarIn: string,\n  position: string,\n  reproduce: () => Fish | Shark,\n  {evolutionParams}: Config\n) {\n  const pet = petMap[position];\n  const reproducingRate = isFish(pet)\n    ? evolutionParams.fishReproducingRate\n    : evolutionParams.sharkReproducingRate;\n\n  if (pet.cyclesSinceReproduce >= reproducingRate && positionToThrowCaviarIn !== position) {\n    petMap[positionToThrowCaviarIn] = reproduce();\n    pet.cyclesSinceReproduce = 0;\n  }\n}\n\nfunction processSharkMove(petMap: PetMap, position: string, config: Config): string | null {\n  const shark = petMap[position] as Shark;\n\n  const zptI = position.indexOf(',');\n  const x = Number(position.slice(0, zptI));\n  const y = Number(position.slice(zptI + 1, position.length));\n\n  const west = x <= 0 ? `${config.boardSize.width - 1},${y}` : `${x - 1},${y}`;\n  const east = x >= config.boardSize.width ? `0,${y}` : `${x + 1},${y}`;\n  const south = y <= 0 ? `${x},${config.boardSize.height - 1}` : `${x},${y - 1}`;\n  const north = y >= config.boardSize.height ? `${x},0` : `${x},${y + 1}`;\n  const neighbourFishPositions = [];\n\n  if (petMap[west] && isFish(petMap[west])) {\n    neighbourFishPositions.push(west);\n  }\n  if (petMap[east] && isFish(petMap[east])) {\n    neighbourFishPositions.push(east);\n  }\n  if (petMap[south] && isFish(petMap[south])) {\n    neighbourFishPositions.push(south);\n  }\n  if (petMap[north] && isFish(petMap[north])) {\n    neighbourFishPositions.push(north);\n  }\n\n  if (neighbourFishPositions.length > 0) {\n    const newPosition = moveToRandomPosition(neighbourFishPositions, petMap, position);\n    shark.energy = config.evolutionParams.sharkMaxEnergy;\n\n    return newPosition;\n  } else if (shark.energy === 0) {\n    delete petMap[position];\n    return null;\n  }\n\n  shark.energy--;\n  return processFishMove(petMap, position, config);\n}\n\nexport function initializePetMap({startParams, boardSize, evolutionParams}: Config) {\n  const a = (counter: number, petMap: PetMap = {}): PetMap => {\n    if (counter <= 0) {\n      return petMap;\n    }\n\n    const x = Math.floor(boardSize.width * Math.random());\n    const y = Math.floor(boardSize.height * Math.random());\n    const position = `${x},${y}`;\n\n    if (petMap[position]) {\n      return a(counter, petMap);\n    }\n\n    return a(counter - 1, {\n      ...petMap,\n      [position]:\n        counter <= startParams.startSharkNumber\n          ? {cyclesSinceReproduce: 0, energy: evolutionParams.sharkMaxEnergy}\n          : {cyclesSinceReproduce: 0}\n    });\n  };\n\n  return a(startParams.startFishNumber + startParams.startSharkNumber);\n}\n\nexport function processDay(petMap: PetMap, config: Config) {\n  const positions = Object.keys(petMap);\n  const fishPositions = positions.filter(position => isFish(petMap[position]));\n  const sharkPositions = positions.filter(position => !isFish(petMap[position]));\n\n  fishPositions.forEach(position => {\n    const newPosition = processFishMove(petMap, position, config);\n    petMap[newPosition].cyclesSinceReproduce++;\n    processPetReproduce(petMap, position, newPosition, () => ({cyclesSinceReproduce: 0}), config);\n  });\n\n  sharkPositions.forEach(position => {\n    const newPosition = processSharkMove(petMap, position, config);\n    if (newPosition) {\n      petMap[newPosition].cyclesSinceReproduce++;\n      processPetReproduce(\n        petMap,\n        position,\n        newPosition,\n        () => ({cyclesSinceReproduce: 0, energy: config.evolutionParams.sharkMaxEnergy}),\n        config\n      );\n    }\n  });\n}\n","import { isFish, PetMap } from \"./logic\";\nimport { Config } from \"./Ocean.types\";\n\nexport const BRICK_SIZE = { WIDTH: 4, HEIGHT: 4 };\n\nexport class Playground {\n  private ctx: CanvasRenderingContext2D;\n\n  private drawRect = (x = 0, y = 0, height: number, color = \"#0000ff\") => {\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(\n      x * BRICK_SIZE.WIDTH,\n      y * BRICK_SIZE.HEIGHT,\n      BRICK_SIZE.WIDTH,\n      BRICK_SIZE.HEIGHT * height\n    );\n  };\n\n  constructor({ boardSize }: Config, private canvas: HTMLCanvasElement) {\n    this.ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    this.canvas.width = boardSize.width * BRICK_SIZE.WIDTH;\n    this.canvas.height = boardSize.height * BRICK_SIZE.WIDTH;\n  }\n\n  clear = () => {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  drawPetMap = (petMap: PetMap, { boardSize }: Config) => {\n    this.clear();\n\n    for (let x = 0; x < boardSize.width; x++) {\n      let activeShape: { y: number; height: number; type?: string } = {\n        y: 0,\n        type: undefined,\n        height: 0\n      };\n\n      for (let y = 0; y < boardSize.height; y++) {\n        const pet = petMap[`${x},${y}`];\n        const type = pet ? (isFish(pet) ? \"fish\" : \"shark\") : undefined;\n\n        if (type === activeShape.type) {\n          activeShape.height++;\n        } else {\n          if (activeShape.type) {\n            const color = activeShape.type === \"fish\" ? \"#0000ff\" : \"#ff0000\";\n            this.drawRect(x, activeShape.y, activeShape.height, color);\n          }\n\n          activeShape = { type, y, height: 1 };\n        }\n      }\n\n      if (activeShape.type) {\n        const color = activeShape.type === \"fish\" ? \"#0000ff\" : \"#ff0000\";\n        this.drawRect(x, activeShape.y, activeShape.height, color);\n      }\n    }\n  };\n}\n","import React from 'react';\nimport {EvolutionParams} from '../Ocean/Ocean.types';\n\nexport type EvolutionControlsProps = {\n  values: EvolutionParams;\n  onChange: (_: Partial<EvolutionParams>) => void;\n};\n\nexport class EvolutionControls extends React.Component<EvolutionControlsProps> {\n  onInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    const name = event.currentTarget.name;\n\n    this.props.onChange({[name]: Number(value)});\n  };\n\n  render() {\n    const {values} = this.props;\n\n    return (\n      <form>\n        <div className=\"control-inputs\">\n          <div className=\"form-group\">\n            <label>Fish caviar throwing</label>\n            <input\n              value={values.fishReproducingRate}\n              type=\"number\"\n              min=\"5\"\n              max=\"100\"\n              name=\"fishReproducingRate\"\n              className=\"form-control\"\n              onChange={this.onInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Shark pregnancy rate</label>\n            <input\n              value={values.sharkReproducingRate}\n              type=\"number\"\n              min=\"5\"\n              max=\"100\"\n              name=\"sharkReproducingRate\"\n              className=\"form-control\"\n              onChange={this.onInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Shark energy</label>\n            <input\n              value={values.sharkMaxEnergy}\n              type=\"number\"\n              min=\"5\"\n              max=\"50\"\n              name=\"sharkMaxEnergy\"\n              className=\"form-control\"\n              onChange={this.onInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Game speed</label>\n            <input\n              value={values.gameSpeed}\n              type=\"number\"\n              min=\"20\"\n              max=\"1000\"\n              name=\"gameSpeed\"\n              className=\"form-control\"\n              onChange={this.onInputChange}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport {StartParams} from '../Ocean/Ocean.types';\n\nexport type StartControlsProps = {\n  disabled: boolean;\n  values: StartParams;\n  onChange: (startParams: Partial<StartParams>) => void;\n};\n\nexport class StartControls extends React.Component<StartControlsProps> {\n  onInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    const name = event.currentTarget.name;\n\n    this.props.onChange({[name]: Number(value)});\n  };\n\n  render() {\n    const {disabled, values} = this.props;\n\n    return (\n      <form id=\"initial-controls\">\n        <div className=\"control-inputs\">\n          <div className=\"form-group\">\n            <label>Fish number at start</label>\n            <div data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop simulation to change\">\n              <input\n                type=\"number\"\n                min=\"5\"\n                max=\"100\"\n                value={values.startFishNumber}\n                name=\"startFishNumber\"\n                className=\"form-control\"\n                onChange={this.onInputChange}\n                disabled={disabled}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Shark number at start</label>\n            <div data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop simulation to change\">\n              <input\n                type=\"number\"\n                min=\"5\"\n                max=\"100\"\n                value={values.startSharkNumber}\n                name=\"startSharkNumber\"\n                className=\"form-control\"\n                onChange={this.onInputChange}\n                disabled={disabled}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport {EvolutionParams, Config, StartParams} from './Ocean.types';\nimport s from './Ocean.module.scss';\nimport {processDay, PetMap, initializePetMap} from './logic';\nimport {Playground, BRICK_SIZE} from './playground';\nimport {EvolutionControls} from '../EvolutionControls/EvolutionControls';\nimport {StartControls} from '../StartControls/StartControls';\n\nexport type OceanProps = {\n  withControls: boolean;\n  initialConfig: Config;\n};\n\nexport type OceanState = {\n  isRunning: boolean;\n  evolutionParams: EvolutionParams;\n  startParams: StartParams;\n};\n\nexport class Ocean extends React.Component<OceanProps, OceanState> {\n  private playground: Playground;\n\n  private petMap: PetMap;\n\n  private gameLoop: any;\n\n  private canvas: HTMLCanvasElement;\n\n  private get config(): Config {\n    return {\n      boardSize: this.props.initialConfig.boardSize, // TODO: replace on props\n      startParams: this.state.startParams,\n      evolutionParams: this.state.evolutionParams\n    };\n  }\n\n  private get gameSpeed() {\n    return this.config.evolutionParams.gameSpeed;\n  }\n\n  private initCanvas = (el: HTMLCanvasElement) => {\n    this.canvas = el;\n  };\n\n  private step = () => {\n    this.playground.drawPetMap(this.petMap, this.config);\n    processDay(this.petMap, this.config);\n  };\n\n  private onStart = () => {\n    this.petMap = initializePetMap(this.config);\n    this.play();\n  };\n\n  pause = () => {\n    this.setState({isRunning: false});\n    clearInterval(this.gameLoop);\n  };\n\n  play = () => {\n    this.setState({isRunning: true});\n    this.gameLoop = setInterval(() => requestAnimationFrame(this.step), this.gameSpeed);\n  };\n\n  reset = ({startParams, evolutionParams}: Partial<Config> = {}) => {\n    this.setState({\n      startParams: {...this.state.startParams, ...startParams},\n      evolutionParams: {...this.state.evolutionParams, ...evolutionParams}\n    });\n\n    this.playground = new Playground(this.config, this.canvas);\n  };\n\n  setEvolutionParams = (evolutionParams: Partial<EvolutionParams>) => {\n    this.setState({evolutionParams: {...this.state.evolutionParams, ...evolutionParams}}, () => {\n      if (this.state.isRunning) {\n        clearInterval(this.gameLoop);\n        this.gameLoop = setInterval(() => requestAnimationFrame(this.step), this.gameSpeed);\n      }\n    });\n  };\n\n  setStartParams = (startParams: Partial<StartParams>) => {\n    this.setState({\n      startParams: {...this.state.startParams, ...startParams}\n    });\n  };\n\n  constructor(props: OceanProps) {\n    super(props);\n\n    this.state = {\n      isRunning: false,\n      evolutionParams: this.props.initialConfig.evolutionParams,\n      startParams: this.props.initialConfig.startParams\n    };\n  }\n\n  componentDidMount() {\n    this.playground = new Playground(this.config, this.canvas);\n    this.petMap = initializePetMap(this.config);\n  }\n\n  render() {\n    const {withControls} = this.props;\n    const {isRunning} = this.state;\n\n    return (\n      <div className={s.root}>\n        <div className={s.oceanWrapper}>\n          <canvas\n            ref={this.initCanvas}\n            width={BRICK_SIZE.WIDTH * this.config.boardSize.width}\n            height={BRICK_SIZE.HEIGHT * this.config.boardSize.height}\n          />\n\n          {!isRunning && (\n            <div className={s.overlay}>\n              <div className=\"control-buttons\">\n                <button className=\"btn btn-primary\" onClick={this.onStart}>\n                  Start\n                </button>\n                {/* <button id=\"reset-button\">Reset</button> */}\n              </div>\n            </div>\n          )}\n\n          {isRunning && (\n            <div className={s.pauseOverlay}>\n              <div className={s.pause} onClick={this.pause} />\n\n              {/* <div className={s.stop} onClick={this.pause} /> */}\n            </div>\n          )}\n        </div>\n\n        {withControls && (\n          <div className={s.controls}>\n            <StartControls\n              disabled={isRunning}\n              onChange={this.setStartParams}\n              values={this.state.startParams}\n            />\n\n            <EvolutionControls values={this.state.evolutionParams} onChange={this.setEvolutionParams} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport s from './App.module.scss';\nimport {Ocean} from '../Ocean/Ocean';\nimport {Config, EvolutionParams} from '../Ocean/Ocean.types';\n\nconst defaultEvolutionParams: EvolutionParams = {\n  fishReproducingRate: 15,\n  sharkReproducingRate: 15,\n  sharkMaxEnergy: 5,\n  gameSpeed: 50\n};\n\nlet testConfig: Config = {\n  boardSize: {width: 150, height: 150},\n\n  evolutionParams: defaultEvolutionParams,\n\n  startParams: {\n    startFishNumber: 2000,\n    startSharkNumber: 1000\n  }\n};\n\nconst App: React.FC = () => {\n  return (\n    <div className={s.root}>\n      <header className={s.header}>Wator</header>\n\n      <div>\n        It all started in 1984 when one god-like creature who lived in our neighbor galaxy. He just returned\n        home after visiting Earth. And he was depressed. His own galaxy was beautiful- it had stunning\n        nebulas, one of the biggest and shiniest quasars in the universe and neutron stars spinning million\n        times per second. But there was no life in it like there was on Earth. Now he saw it clearly. All he\n        wanted now was to create life. He started by creating a planet. He knew all life on Earth began in the\n        water so he filled his planet with a crystal blue ocean that covered every bit of the land. And then\n        he created Dave, a fish. He also filled his ocean with endless plankton so that Dave never dies from\n        hunger.\n      </div>\n\n      <Ocean withControls={false} initialConfig={testConfig} />\n\n      <div>\n        For a brief moment he was happy. But suddenly he understood that Dave lacks something very important\n        for life. The purpose. He looked at Earth and right away he knew what he should do. He gave Dave an\n        ability to give birth.\n      </div>\n\n      <Ocean withControls={false} initialConfig={testConfig} />\n\n      <div>\n        Oh no, Dave went out of control and kept reproducing until the ocean became overcrowded. He wanted\n        Dave to be happy but instead he condemned him and all his family to miserable existence in this\n        uninhabitable world. He had to fix this. And he decided that life will balance life. He created Ed, a\n        shark. Ed will not eat plankton like Dave, he will eat Dave. Its a necessary evil but he knew he\n        should be careful not to make old mistakes. He had to let Ed breed. But he had to also let him die.\n        This way it was just.\n      </div>\n\n      <Ocean withControls={false} initialConfig={testConfig} />\n\n      <div>\n        Something was not quite right. This world was dead again. Sharks ate all the fish and died of hunger.\n        He thought that he could fix it by making Ed breed slowly.{' '}\n      </div>\n\n      <Ocean withControls={true} initialConfig={testConfig} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './App/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Ocean_root__2vubK\",\"oceanWrapper\":\"Ocean_oceanWrapper__pD5FV\",\"overlay\":\"Ocean_overlay__WeTpR\",\"pauseOverlay\":\"Ocean_pauseOverlay__2KFj9\",\"pause\":\"Ocean_pause__3fR0D\",\"stop\":\"Ocean_stop__152WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"header\":\"App_header__1Xt5M\"};"],"sourceRoot":""}